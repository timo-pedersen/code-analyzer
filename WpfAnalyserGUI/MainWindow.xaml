<Window x:Class="WpfAnalyzerGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:WpfAnalyzerGUI.VMs"
        xmlns:data="clr-namespace:CodeAnalyzer.Data;assembly=CodeAnalyzer"
        xmlns:converters="clr-namespace:Converters"
        mc:Ignorable="d"
        Title="Code Analyzer" Height="450" Width="1600"
        FontFamily="Arial" FontSize="14">
  <Window.Resources>
    <Style TargetType="Paragraph">
      <!-- 20.0 is default. It's pixels not characters though -->
      <Setter Property="TextIndent" Value="30" />
    </Style>
    <Style TargetType="Button">
      <Setter Property="Margin" Value="1"/>
      <Setter Property="Padding" Value="10,0,10,0"/>
    </Style>
    <vm:MainVM x:Key="Vm" />
    <converters:BoolToVisibilityConverter
      x:Key="BoolToHiddenConverter"
      TrueValue="Visible" FalseValue="Hidden" />
    <converters:BoolToVisibilityConverter
      x:Key="BoolToHiddenConverterNot"
      FalseValue="Visible" TrueValue="Hidden" />
    <!--<Style TargetType="{x:Type FlowDocument}" x:Key="FontSizeStyle">
      <Setter Property="FontSize" Value="4" />
    </Style>-->
  </Window.Resources>
  <Window.DataContext>
    <Binding Source="{StaticResource Vm}"/>
  </Window.DataContext>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="27"/>
      <RowDefinition Height="22"/>
      <RowDefinition/>
    </Grid.RowDefinitions>

    <Grid.Background>
      <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFCECECE"/>
        <GradientStop Color="White" Offset="1"/>
        <GradientStop Color="#FFEAEAEA" Offset="0.414"/>
      </LinearGradientBrush>
    </Grid.Background>

    <DockPanel >
      <Label VerticalContentAlignment="Center">SolutionPath:</Label>
      <TextBox VerticalContentAlignment="Center" MinWidth="200px" Margin="2,2,0,2" Text="{Binding FolderPath}" />
      <Button Padding="5,0,5,0" Margin="0,2,0,2" Command="{Binding BrowseFolderCommand}">…</Button>
      <StackPanel Orientation="Vertical" Width="200" Margin="5,5,5,5">
        <ProgressBar Foreground="BlueViolet" Margin="0,5,0,1" Value="{Binding ProgressValue1}" Maximum="{Binding ProgressMax1}"/>
        <ProgressBar Foreground="LimeGreen" Margin="0,1,0,5" Value="{Binding ProgressValue2}" Maximum="{Binding ProgressMax2}"/>
      </StackPanel>
      <Label Content="{Binding Solutions.Count}"/>
      <Label Content="solutions scanned"/>
      <Button DockPanel.Dock="Right" Command="{Binding OpenSolutionComparerCommand}">saldkj</Button>
      <Rectangle/>
    </DockPanel>
    <StackPanel Grid.Row="1">
      <Label Content="{Binding CurrentPath}"></Label>
    </StackPanel>


    <Grid Grid.Row="2" Margin="0,5,0,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="317*"/>
        <ColumnDefinition Width="5"/>
        <ColumnDefinition Width="636.477"/>
        <ColumnDefinition Width="5"/>
        <ColumnDefinition Width="636*"/>
      </Grid.ColumnDefinitions>
      <DockPanel>
        <DockPanel VerticalAlignment="Bottom" HorizontalAlignment="Stretch" DockPanel.Dock="Bottom">
          <Button DockPanel.Dock="Left" Command="{Binding ScanCommand}">Scan selected</Button>
          <Button DockPanel.Dock="Right" Command="{Binding ScanAllCommand}">Scan All</Button>
          <Rectangle/>
       </DockPanel>
        <TreeView x:Name="TheTreeView" ItemsSource="{Binding Solutions}" >
          <!--<TreeView.ItemContainerStyle>
            <Style TargetType="{x:Type TreeViewItem}">
              <Setter Property="IsSelected" Value="{Binding IsSelected}" />
            </Style>
          </TreeView.ItemContainerStyle>-->

          <!--
          <DataGrid>
            <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseDoubleClick">
              <i:InvokeCommandAction Command="{Binding Mode=OneWay, Path=OpenClientCommand}" CommandParameter="{Binding ElementName=searchResults, Path=SelectedItems}" />
            </i:EventTrigger>
            </i:Interaction.Triggers>
          </DataGrid>
          -->
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="SelectedItemChanged">
              <i:InvokeCommandAction Command="{Binding Mode=OneWay, Path=SelectionChangeCommand}" CommandParameter="{Binding ElementName=TheTreeView}" />
            </i:EventTrigger>
          </i:Interaction.Triggers>
          <TreeView.Resources>
            <HierarchicalDataTemplate DataType="{x:Type data:Solution}" ItemsSource="{Binding Projects}">
              <StackPanel Orientation="Horizontal">
                <Ellipse Width="8" Height="8" Fill="DarkMagenta" 
                         Visibility="{Binding Loaded,  Converter={StaticResource BoolToHiddenConverter}}" />
                <Ellipse Width="8" Height="8" Fill="Gray" 
                         Visibility="{Binding Loaded,  Converter={StaticResource BoolToHiddenConverterNot}}" />
                <!--<Label Foreground="DarkMagenta" IsEnabled="{Binding Loaded}">###</Label>-->
                <Label Content="{Binding Name}" />
                <Label Foreground="DarkGray" FontStyle="Italic" Content="{Binding Message, Mode=TwoWay}" />
              </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type data:Project}" ItemsSource="{Binding Documents}">
              <StackPanel Orientation="Horizontal">
                <Ellipse Width="8" Height="8" Fill="LimeGreen" />
                <TextBlock Text="{Binding Name}" />
              </StackPanel>
            </HierarchicalDataTemplate>
            <DataTemplate DataType="{x:Type data:Document}">
              <TextBlock Text="{Binding Name}" />
            </DataTemplate>
          </TreeView.Resources>
        </TreeView>
      </DockPanel>

      <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

      <!--<ScrollViewer Margin="2" Grid.Column="2">
        <TextBlock FontFamily="Consolas" Text="{Binding Path=ReferenceDocumentText}"/>
      </ScrollViewer>-->
      <FlowDocumentScrollViewer x:Name="RefDoc" Margin="2" Grid.Column="2" FontFamily="Consolas" Document="{Binding Path=TheReferenceFlowDoc}" >
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="PreviewMouseWheel">
            <i:InvokeCommandAction Command="{Binding Mode=OneWay, Path=MouseWheelCommand}" CommandParameter="{Binding ElementName=RefDoc}"/>
          </i:EventTrigger>
        </i:Interaction.Triggers>
      </FlowDocumentScrollViewer>

      <GridSplitter Grid.Column="3" Width="5" HorizontalAlignment="Stretch" />

      <FlowDocumentScrollViewer x:Name="FlowDoc" Margin="2" Grid.Column="4" FontFamily="Consolas" Document="{Binding Path=TheFlowDoc}" >
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="PreviewMouseWheel">
            <i:InvokeCommandAction Command="{Binding Mode=OneWay, Path=MouseWheelCommand}"  CommandParameter="{Binding ElementName=FlowDoc}"/>
          </i:EventTrigger>
        </i:Interaction.Triggers>
      </FlowDocumentScrollViewer>

    </Grid>
  </Grid>
</Window>
